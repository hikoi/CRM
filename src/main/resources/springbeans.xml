<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
                           http://www.springframework.org/schema/redis
                           http://www.springframework.org/schema/redis/spring-redis-1.0.xsd"
       default-lazy-init="false">

    <context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true" location="classpath:/properties/beans.properties"/>

    <!-- reids -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle"      value="${redis.maxIdle}"/>
        <property name="maxTotal"     value="${redis.maxTotal}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.uri}"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName"   value="${redis.host}"/>
        <property name="port"       value="${redis.port}"/>
        <property name="password"   value="${redis.password}"/>
        <property name="usePool"    value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory"/>
    </bean>

    <bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>

    <!-- 敏感词更新推送 -->
    <!--<bean id="pushSensitiveListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">-->
        <!--<property name="delegate"              ref="queueServiceImpl"/>-->
        <!--<property name="serializer"            ref="jdkSerializer"/>-->
        <!--<property name="defaultListenerMethod" value="pushSensitive"/>-->
    <!--</bean>-->

    <!-- 微信消息实时同步 -->
    <bean id="saveWechatMessageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <property name="delegate"              ref="queueServiceImpl"/>
        <property name="serializer"            ref="jdkSerializer"/>
        <property name="defaultListenerMethod" value="saveWechatMessage"/>
    </bean>

    <!-- 微信消息定时同步 -->
    <bean id="saveWechatMessagesListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <property name="delegate"              ref="queueServiceImpl"/>
        <property name="serializer"            ref="jdkSerializer"/>
        <property name="defaultListenerMethod" value="saveWechatMessages"/>
    </bean>

    <!-- 添加监听器 -->
    <redis:listener-container>
        <!--<redis:listener ref="pushSensitiveListener"             method="pushSensitive"            serializer="jdkSerializer" topic="push_sensitive_queue"/>-->
        <redis:listener ref="saveWechatMessageListener"         method="saveWechatMessage"        serializer="jdkSerializer" topic="save_wechat_message_queue"/>
        <redis:listener ref="saveWechatMessagesListener"        method="saveWechatMessages"       serializer="jdkSerializer" topic="save_wechat_messages_queue"/>
    </redis:listener-container>
</beans>