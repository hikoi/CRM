<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.crm.core.account.dao.mapper.PermissionMapper">

    <sql id="WHERE_SQL">
        <where>
            <if test="params.andCriterions != null and params.andCriterions.size > 0">
                <foreach collection="params.andCriterions" item="criterion">
                    <trim prefix="AND (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCriterions != null and params.orCriterions.size > 0">
                <foreach collection="params.orCriterions" item="criterion">
                    <trim prefix="OR (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <resultMap id="permission" type="com.crm.core.account.entity.Permission">
        <id     column="id"          property="id"          javaType="java.lang.String"/>
        <result column="url"         property="url"         javaType="java.lang.String"/>
        <result column="method"      property="method"      typeHandler="EnumTypeHandler"/>
        <result column="description" property="description" javaType="java.lang.String"/>
        <result column="need_allot"  property="needAllot"   javaType="java.lang.Boolean"/>
        <result column="create_time" property="createTime"  javaType="java.util.Date"/>
        <result column="update_time" property="updateTime"  javaType="java.util.Date"/>
    </resultMap>

    <insert id="save">
      INSERT
        INTO permission (
             id,
             url,
             method,
             description,
             need_allot,
             create_time
        ) VALUE (
             #{id,          jdbcType=VARCHAR},
             #{url,         jdbcType=VARCHAR},
             #{method,      jdbcType=VARCHAR},
             #{description, jdbcType=VARCHAR},
             #{needAllot,   jdbcType=BOOLEAN},
             #{createTime,  jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="saveList">
      INSERT
        INTO permission (
             id,
             url,
             method,
             description,
             need_allot,
             create_time
        ) VALUES
      <foreach collection="permissions" item="permission" separator=",">
        (
              #{permission.id,          jdbcType=VARCHAR},
              #{permission.url,         jdbcType=VARCHAR},
              #{permission.method,      jdbcType=VARCHAR},
              #{permission.description, jdbcType=VARCHAR},
              #{permission.needAllot,   jdbcType=BOOLEAN},
              #{permission.createTime,  jdbcType=TIMESTAMP}
        )
      </foreach>
    </insert>

    <insert id="establishByAccountId">
      INSERT
        INTO account_permission (
             account_id,
             permission_id
        ) VALUES
      <foreach collection="permissionIds" item="permissionId" separator=",">
        (
             #{accountId,    jdbcType=VARCHAR},
             #{permissionId, jdbcType=VARCHAR}
        )
      </foreach>
    </insert>

    <delete id="dissolveByAccountId">
      DELETE
        FROM account_permission
       WHERE account_id = #{accountId}
    </delete>

    <update id="update">
      UPDATE permission
       <set>
          <if test="description != null">
            description = #{description, jdbcType=VARCHAR},
          </if>
          <if test="needAllot != null">
            need_allot = #{needAllot, jdbcType=BOOLEAN},
          </if>
          <if test="updateTime != null">
            update_time = #{updateTime, jdbcType=TIMESTAMP},
          </if>
       </set>
        WHERE id = #{id}
    </update>

    <update id="updateList">
      <foreach collection="permissions" item="permission" separator=";">
        UPDATE permission
         <set>
            <if test="permission.description != null">
              description = #{permission.description, jdbcType=VARCHAR},
            </if>
            <if test="permission.needAllot != null">
              need_allot = #{permission.needAllot, jdbcType=BOOLEAN},
            </if>
            <if test="permission.updateTime != null">
              update_time = #{permission.updateTime, jdbcType=TIMESTAMP},
            </if>
         </set>
          WHERE id = #{permission.id}
      </foreach>
    </update>

    <select id="get" resultMap="permission">
      SELECT *
        FROM permission
      <if test="params != null">
        <include refid="WHERE_SQL"/>
      </if>
    </select>

    <select id="find" resultMap="permission">
      SELECT *
        FROM permission
      <if test="params != null">
        <include refid="WHERE_SQL"/>

        <if test="params.sorts != null and params.sorts.size > 0">
          ORDER BY
          <foreach collection="params.sorts" item="sort" separator=",">
           ${sort.property} ${sort.operator}
          </foreach>
        </if>

        <if test="params.limit != null">
          ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
        </if>
      </if>
    </select>

    <select id="count" resultType="java.lang.Long">
      SELECT COUNT(*)
        FROM permission
      <if test="params != null">
        <include refid="WHERE_SQL"/>
      </if>
    </select>

    <select id="findByAccountId" resultMap="permission">
      SELECT *
        FROM permission p
   LEFT JOIN account_permission ap
          ON permission_id = p.id
       WHERE ap.account_id = #{accountId}
    </select>

    <select id="findByRoleIds" resultMap="permission">
      SELECT p.*
        FROM permission p
   LEFT JOIN role_permission rp
          ON rp.permission_id = p.id
       WHERE rp.role_id IN
      <foreach collection="roleIds" item="roleId" separator="," open="(" close=")">
        #{roleId}
      </foreach>
    </select>
</mapper>